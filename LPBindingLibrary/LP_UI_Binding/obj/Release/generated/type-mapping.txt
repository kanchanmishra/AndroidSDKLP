com/liveperson/infra/ui/BuildConfig = Com.Liveperson.Infra.UI.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/liveperson/infra/ui/view/adapter/BaseRecyclerViewCursorAdapter = Com.Liveperson.Infra.UI.View.Adapter.BaseRecyclerViewCursorAdapter
  <init>(Landroid/content/Context;Landroid/database/Cursor;)V = .ctor(Android.Content.Context, Android.Database.ICursor)
  mContext = MContext
  mCount = MCount
  mCursor = MCursor
  mResourse = MResourse
  mRowIdColumn = MRowIdColumn
  mSelectedPosition = MSelectedPosition
  TAG = Tag
  getCursor()Landroid/database/Cursor; = Cursor
  isCursorValid()Z = IsCursorValid
  getItemCount()I = ItemCount
  changeCursor(Landroid/database/Cursor;)V = ChangeCursor(Android.Database.ICursor)
  extractFromCursor(Landroid/database/Cursor;)Ljava/lang/Object; = ExtractFromCursor(Android.Database.ICursor)
  getItemViewType(I)I = GetItemViewType(int)
  getObjectAt(I)Ljava/lang/Object; = GetObjectAt(int)
  onAccessibilityEventAvailable(Landroid/support/v7/widget/RecyclerView$ViewHolder;)V = OnAccessibilityEventAvailable(Java.Lang.Object)
  onBind(Landroid/support/v7/widget/RecyclerView$ViewHolder;Ljava/lang/Object;II)V = OnBind(Java.Lang.Object, Java.Lang.Object, int, int)
  onBindViewHolder(Landroid/support/v7/widget/RecyclerView$ViewHolder;I)V = OnBindViewHolder(Android.Support.V7.Widget.RecyclerView.ViewHolder, int)
  onCreate(Landroid/view/ViewGroup;I)Landroid/support/v7/widget/RecyclerView$ViewHolder; = OnCreate(Android.Views.ViewGroup, int)
  onCreateViewHolder(Landroid/view/ViewGroup;I)Landroid/support/v7/widget/RecyclerView$ViewHolder; = OnCreateViewHolder(Android.Views.ViewGroup, int)
  setSelectedPosition(I)V = SetSelectedPosition(int)
  swapCursor(Landroid/database/Cursor;)Landroid/database/Cursor; = SwapCursor(Android.Database.ICursor)
com/liveperson/infra/ui/view/adapter/StickyHeaderRecyclerViewCursorAdapter = Com.Liveperson.Infra.UI.View.Adapter.StickyHeaderRecyclerViewCursorAdapter
  <init>(Landroid/content/Context;Landroid/database/Cursor;)V = .ctor(Android.Content.Context, Android.Database.ICursor)
  TAG = Tag
  getHeaderId(I)J = GetHeaderId(int)
com/liveperson/infra/ui/view/header/caching/HeaderProvider = Com.Liveperson.Infra.UI.View.Header.Caching.IHeaderProvider
  getHeader(Landroid/support/v7/widget/RecyclerView;I)Landroid/view/View; = GetHeader(Android.Support.V7.Widget.RecyclerView, int)
  invalidate()V = Invalidate()
com/liveperson/infra/ui/view/header/caching/HeaderViewCache = Com.Liveperson.Infra.UI.View.Header.Caching.HeaderViewCache
  <init>(Lcom/liveperson/infra/ui/view/header/StickyRecyclerHeadersAdapter;Lcom/liveperson/infra/ui/view/header/util/OrientationProvider;)V = .ctor(Com.Liveperson.Infra.UI.View.Header.IStickyRecyclerHeadersAdapter, Com.Liveperson.Infra.UI.View.Header.Util.IOrientationProvider)
  getHeader(Landroid/support/v7/widget/RecyclerView;I)Landroid/view/View; = GetHeader(Android.Support.V7.Widget.RecyclerView, int)
  invalidate()V = Invalidate()
com/liveperson/infra/ui/view/header/calculation/DimensionCalculator = Com.Liveperson.Infra.UI.View.Header.Calculation.DimensionCalculator
  <init>()V = .ctor()
  initMargins(Landroid/graphics/Rect;Landroid/view/View;)V = InitMargins(Android.Graphics.Rect, Android.Views.View)
com/liveperson/infra/ui/view/header/HeaderPositionCalculator = Com.Liveperson.Infra.UI.View.Header.HeaderPositionCalculator
  <init>(Lcom/liveperson/infra/ui/view/header/StickyRecyclerHeadersAdapter;Lcom/liveperson/infra/ui/view/header/caching/HeaderProvider;Lcom/liveperson/infra/ui/view/header/util/OrientationProvider;Lcom/liveperson/infra/ui/view/header/calculation/DimensionCalculator;)V = .ctor(Com.Liveperson.Infra.UI.View.Header.IStickyRecyclerHeadersAdapter, Com.Liveperson.Infra.UI.View.Header.Caching.IHeaderProvider, Com.Liveperson.Infra.UI.View.Header.Util.IOrientationProvider, Com.Liveperson.Infra.UI.View.Header.Calculation.DimensionCalculator)
  hasNewHeader(IZ)Z = HasNewHeader(int, bool)
  hasStickyHeader(Landroid/view/View;II)Z = HasStickyHeader(Android.Views.View, int, int)
  initHeaderBounds(Landroid/graphics/Rect;Landroid/support/v7/widget/RecyclerView;Landroid/view/View;Landroid/view/View;Z)V = InitHeaderBounds(Android.Graphics.Rect, Android.Support.V7.Widget.RecyclerView, Android.Views.View, Android.Views.View, bool)
com/liveperson/infra/ui/view/header/rendering/HeaderRenderer = Com.Liveperson.Infra.UI.View.Header.Rendering.HeaderRenderer
  <init>(Lcom/liveperson/infra/ui/view/header/util/OrientationProvider;)V = .ctor(Com.Liveperson.Infra.UI.View.Header.Util.IOrientationProvider)
  drawHeader(Landroid/support/v7/widget/RecyclerView;Landroid/graphics/Canvas;Landroid/view/View;Landroid/graphics/Rect;)V = DrawHeader(Android.Support.V7.Widget.RecyclerView, Android.Graphics.Canvas, Android.Views.View, Android.Graphics.Rect)
com/liveperson/infra/ui/view/header/StickyRecyclerHeadersAdapter = Com.Liveperson.Infra.UI.View.Header.IStickyRecyclerHeadersAdapter
  getItemCount()I = ItemCount
  getHeaderId(I)J = GetHeaderId(int)
  onBindHeaderViewHolder(Landroid/support/v7/widget/RecyclerView$ViewHolder;I)V = OnBindHeaderViewHolder(Java.Lang.Object, int)
  onCreateHeaderViewHolder(Landroid/view/ViewGroup;)Landroid/support/v7/widget/RecyclerView$ViewHolder; = OnCreateHeaderViewHolder(Android.Views.ViewGroup)
com/liveperson/infra/ui/view/header/StickyRecyclerHeadersDecoration = Com.Liveperson.Infra.UI.View.Header.StickyRecyclerHeadersDecoration
  <init>(Lcom/liveperson/infra/ui/view/header/StickyRecyclerHeadersAdapter;)V = .ctor(Com.Liveperson.Infra.UI.View.Header.IStickyRecyclerHeadersAdapter)
  findHeaderPositionUnder(II)I = FindHeaderPositionUnder(int, int)
  getHeaderView(Landroid/support/v7/widget/RecyclerView;I)Landroid/view/View; = GetHeaderView(Android.Support.V7.Widget.RecyclerView, int)
  invalidateHeaders()V = InvalidateHeaders()
com/liveperson/infra/ui/view/header/util/LinearLayoutOrientationProvider = Com.Liveperson.Infra.UI.View.Header.Util.LinearLayoutOrientationProvider
  <init>()V = .ctor()
  getOrientation(Landroid/support/v7/widget/RecyclerView;)I = GetOrientation(Android.Support.V7.Widget.RecyclerView)
  isReverseLayout(Landroid/support/v7/widget/RecyclerView;)Z = IsReverseLayout(Android.Support.V7.Widget.RecyclerView)
com/liveperson/infra/ui/view/header/util/OrientationProvider = Com.Liveperson.Infra.UI.View.Header.Util.IOrientationProvider
  getOrientation(Landroid/support/v7/widget/RecyclerView;)I = GetOrientation(Android.Support.V7.Widget.RecyclerView)
  isReverseLayout(Landroid/support/v7/widget/RecyclerView;)Z = IsReverseLayout(Android.Support.V7.Widget.RecyclerView)
com/liveperson/infra/ui/view/resources/ResourceHelper = Com.Liveperson.Infra.UI.View.Resources.ResourceHelper
  <init>()V = .ctor()
  updateBackgroundColor(Landroid/view/View;I)V = UpdateBackgroundColor(Android.Views.View, int)
  updateBackgroundDrawable(Landroid/view/View;I)V = UpdateBackgroundDrawable(Android.Views.View, int)
  updateBackgroundSolidColor(Landroid/view/View;I)V = UpdateBackgroundSolidColor(Android.Views.View, int)
  updateBackgroundStrokeColor(Landroid/view/View;II)V = UpdateBackgroundStrokeColor(Android.Views.View, int, int)
  updateTextColor(Landroid/widget/TextView;I)V = UpdateTextColor(Android.Widget.TextView, int)
  updateTextColorLink(Landroid/widget/TextView;I)V = UpdateTextColorLink(Android.Widget.TextView, int)
com/liveperson/infra/ui/view/resources/ResourceManager = Com.Liveperson.Infra.UI.View.Resources.ResourceManager
  instance = Instance
  getColor(I)I = GetColor(int)
  getDimension(I)F = GetDimension(int)
  getDrawable(I)Landroid/graphics/drawable/Drawable; = GetDrawable(int)
  mapColor(II)V = MapColor(int, int)
  mapDimension(IF)V = MapDimension(int, float)
  mapDrawable(II)V = MapDrawable(int, int)
  valueOf(Ljava/lang/String;)Lcom/liveperson/infra/ui/view/resources/ResourceManager; = ValueOf(string)
  values()[Lcom/liveperson/infra/ui/view/resources/ResourceManager; = Values()
com/liveperson/infra/ui/view/screen/BaseFragment = Com.Liveperson.Infra.UI.View.Screen.BaseFragment
  <init>()V = .ctor()
com/liveperson/infra/ui/view/ui/CustomButton = Com.Liveperson.Infra.UI.View.UI.CustomButton
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  TAG = Tag
com/liveperson/infra/ui/view/ui/CustomEditText = Com.Liveperson.Infra.UI.View.UI.CustomEditText
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  TAG = Tag
com/liveperson/infra/ui/view/ui/CustomTextView = Com.Liveperson.Infra.UI.View.UI.CustomTextView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  TAG = Tag
com/liveperson/infra/ui/view/ui/TooltipWindow = Com.Liveperson.Infra.UI.View.UI.TooltipWindow
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  TAG = Tag
  isTooltipShown()Z = IsTooltipShown
  dismissTooltip()V = DismissTooltip()
  enable(Z)V = Enable(bool)
  showToolTip(Landroid/view/View;Ljava/lang/String;)V = ShowToolTip(Android.Views.View, string)
  showToolTip(Landroid/view/View;Ljava/lang/String;Z)V = ShowToolTip(Android.Views.View, string, bool)
com/liveperson/infra/ui/view/ui/TouchImageView = Com.Liveperson.Infra.UI.View.UI.touchImageView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  getCurrentZoom()F = CurrentZoom
  isZoomed()Z = IsZoomed
  getMaxZoom()F = MaxZoom
  setMaxZoom(F)V = MaxZoom
  getMinZoom()F = MinZoom
  setMinZoom(F)V = MinZoom
  getScrollPosition()Landroid/graphics/PointF; = ScrollPosition
  getZoomedRect()Landroid/graphics/RectF; = ZoomedRect
  canScrollHorizontallyFroyo(I)Z = CanScrollHorizontallyFroyo(int)
  onConfigurationChanged(Landroid/content/res/Configuration;)V = OnConfigurationChanged(Android.Content.Res.Configuration)
  onRestoreInstanceState(Landroid/os/Parcelable;)V = OnRestoreInstanceState(Android.OS.IParcelable)
  onSaveInstanceState()Landroid/os/Parcelable; = OnSaveInstanceState()
  resetZoom()V = ResetZoom()
  setOnDoubleTapListener(Landroid/view/GestureDetector$OnDoubleTapListener;)V = SetOnDoubleTapListener(Android.Views.GestureDetector.IOnDoubleTapListener)
  setOnTouchImageViewListener(Lcom/liveperson/infra/ui/view/ui/TouchImageView$OnTouchImageViewListener;)V = SetOnTouchImageViewListener(Com.Liveperson.Infra.UI.View.UI.touchImageView.IOnTouchImageViewListener)
  setScrollPosition(FF)V = SetScrollPosition(float, float)
  setZoom(Lcom/liveperson/infra/ui/view/ui/TouchImageView;)V = SetZoom(Com.Liveperson.Infra.UI.View.UI.touchImageView)
  setZoom(F)V = SetZoom(float)
  setZoom(FFF)V = SetZoom(float, float, float)
  setZoom(FFFLandroid/widget/ImageView$ScaleType;)V = SetZoom(float, float, float, Android.Widget.ImageView.ScaleType)
com/liveperson/infra/ui/view/uicomponents/ICloseMenuListener = Com.Liveperson.Infra.UI.View.Uicomponents.ICloseMenuListener
  onCloseMenu()V = OnCloseMenu()
com/liveperson/infra/ui/view/uicomponents/IConnectionChangedCustomView = Com.Liveperson.Infra.UI.View.Uicomponents.IConnectionChangedCustomView
  onConnectionChanged(Z)V = OnConnectionChanged(bool)
com/liveperson/infra/ui/view/uicomponents/IConversationProvider = Com.Liveperson.Infra.UI.View.Uicomponents.IConversationProvider
  getBrandId()Ljava/lang/String; = BrandId
  getTargetId()Ljava/lang/String; = TargetId
com/liveperson/infra/ui/view/uicomponents/IOverflowMenu = Com.Liveperson.Infra.UI.View.Uicomponents.IOverflowMenu
  isMenuOpen()Z = IsMenuOpen
  hide()V = Hide()
  setOnCloseListener(Lcom/liveperson/infra/ui/view/uicomponents/ICloseMenuListener;)V = SetOnCloseListener(Com.Liveperson.Infra.UI.View.Uicomponents.ICloseMenuListener)
  show()V = Show()
com/liveperson/infra/ui/view/utils/ImageUrlUtil = Com.Liveperson.Infra.UI.View.Utils.ImageUrlUtil
  <init>()V = .ctor()
  completeToValidImageUrl(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = CompleteToValidImageUrl(string, string)
com/liveperson/infra/ui/view/utils/ItemsView = Com.Liveperson.Infra.UI.View.Utils.ItemsView
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;ILcom/liveperson/infra/ui/view/utils/ItemsView$CellsFactory;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int, Com.Liveperson.Infra.UI.View.Utils.ItemsView.ICellsFactory)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;Lcom/liveperson/infra/ui/view/utils/ItemsView$CellsFactory;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, Com.Liveperson.Infra.UI.View.Utils.ItemsView.ICellsFactory)
  <init>(Landroid/content/Context;Lcom/liveperson/infra/ui/view/utils/ItemsView$CellsFactory;)V = .ctor(Android.Content.Context, Com.Liveperson.Infra.UI.View.Utils.ItemsView.ICellsFactory)
  add(Ljava/lang/Object;)V = Add(Java.Lang.Object)
  filter(Ljava/lang/String;)V = Filter(string)
  reload()V = Reload()
  remove(Ljava/lang/Object;)V = Remove(Java.Lang.Object)
  setData(Ljava/util/List;)V = SetData(System.Collections.IList)
  withCellType(Ljava/lang/Object;)Lcom/liveperson/infra/ui/view/utils/ItemsView; = WithCellType(Java.Lang.Object)
com/liveperson/infra/ui/view/utils/UIUtils = Com.Liveperson.Infra.UI.View.Utils.UIUtils
  <init>()V = .ctor()
  TAG = Tag
  changeCustomTextViewFont(Landroid/widget/TextView;Landroid/content/Context;Landroid/util/AttributeSet;[II)V = ChangeCustomTextViewFont(Android.Widget.TextView, Android.Content.Context, Android.Util.IAttributeSet, int[], int)
  createDialog(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Landroid/content/DialogInterface$OnClickListener;Ljava/lang/String;Landroid/content/DialogInterface$OnClickListener;)Landroid/app/AlertDialog; = CreateDialog(Android.Content.Context, string, string, string, Android.Content.IDialogInterfaceOnClickListener, string, Android.Content.IDialogInterfaceOnClickListener)
  detectEmojis(Ljava/lang/String;)I = DetectEmojis(string)
  hideKeyboard(Landroid/app/Activity;)V = HideKeyboard(Android.App.Activity)
  startProgressBarAnimation(Landroid/widget/ImageView;I)V = StartProgressBarAnimation(Android.Widget.ImageView, int)
